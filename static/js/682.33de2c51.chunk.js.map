{"version":3,"file":"static/js/682.33de2c51.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import './appBanner.scss'\nimport avengers from '../../resources/img/Avengers.png'\nimport avengersLogo from '../../resources/img/Avengers_logo.png'\n\nconst AppBanner = () => {\n\treturn (\n\t\t<div className=\"app__banner\">\n\t\t\t<img src={avengers} alt=\"Avengers\" />\n\t\t\t<div className=\"app__banner-text\">\n\t\t\t\tNew comics every week!\n\t\t\t\t<br />\n\t\t\t\tStay tuned!\n\t\t\t</div>\n\t\t\t<img src={avengersLogo} alt=\"Avengers logo\" />\n\t\t</div>\n\t)\n}\n\nexport default AppBanner\n","import img from './error.gif'\n\nconst ErrorMessage = () => {\n\treturn (\n\t\t<img\n\t\t\tstyle={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }}\n\t\t\tsrc={img}\n\t\t\talt=\"Error\"\n\t\t/>\n\t)\n}\n\nexport default ErrorMessage\n","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\n\nimport './comicsList.scss'\n\nconst setContent = (process, Component, newItemLoading) => {\n\tswitch (process) {\n\t\tcase 'waiting':\n\t\t\treturn <Spinner />\n\t\tcase 'loading':\n\t\t\treturn newItemLoading ? <Component /> : <Spinner />\n\t\tcase 'confirmed':\n\t\t\treturn <Component />\n\t\tcase 'error':\n\t\t\treturn <ErrorMessage />\n\t\tdefault:\n\t\t\tthrow new Error('Unexpected process state')\n\t}\n}\n\nconst ComicsList = () => {\n\tconst [comicsList, setComicsList] = useState([])\n\tconst [newItemLoading, setnewItemLoading] = useState(false)\n\tconst [offset, setOffset] = useState(0)\n\tconst [comicsEnded, setComicsEnded] = useState(false)\n\n\tconst { loading, error, getAllComics, process, setProcess } = useMarvelService()\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true)\n\t}, [])\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setnewItemLoading(false) : setnewItemLoading(true)\n\t\tgetAllComics(offset)\n\t\t\t.then(onComicsListLoaded)\n\t\t\t.then(() => setProcess('confirmed'))\n\t}\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = false\n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true\n\t\t}\n\t\tsetComicsList([...comicsList, ...newComicsList])\n\t\tsetnewItemLoading(false)\n\t\tsetOffset(offset + 8)\n\t\tsetComicsEnded(ended)\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item) => {\n\t\t\treturn (\n\t\t\t\t<li className=\"comics__item\" key={uuidv4()}>\n\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n\t\t\t\t\t\t<div className=\"comics__item-name\">{item.title}</div>\n\t\t\t\t\t\t<div className=\"comics__item-price\">{item.price}</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\n\t\treturn <ul className=\"comics__grid\">{items}</ul>\n\t}\n\n\treturn (\n\t\t<div className=\"comics__list\">\n\t\t\t{setContent(process, () => renderItems(comicsList), newItemLoading)}\n\t\t\t<button\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: comicsEnded ? 'none' : 'block' }}\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tonClick={() => onRequest(offset)}>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default ComicsList\n","import { Helmet } from 'react-helmet'\n\nimport ComicsList from '../comicsList/ComicsList'\nimport AppBanner from '../appBanner/AppBanner'\n\nconst ComicsPage = () => {\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<meta name=\"description\" content=\"Page with list of our comic\" />\n\t\t\t\t<title>Commics Page</title>\n\t\t\t</Helmet>\n\t\t\t<AppBanner />\n\t\t\t<ComicsList />\n\t\t</>\n\t)\n}\n\nexport default ComicsPage\n","import { useState, useCallback } from 'react'\n\nexport const useHttp = () => {\n\tconst [process, setProcess] = useState('waiting')\n\n\tconst request = useCallback(\n\t\tasync (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, { method, body, headers })\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json()\n\n\t\t\t\tsetProcess('confirmed')\n\t\t\t\treturn data\n\t\t\t} catch (e) {\n\t\t\t\tsetProcess('error')\n\t\t\t\tthrow e\n\t\t\t}\n\t\t},\n\t\t[]\n\t)\n\n\tconst clearError = useCallback(() => {\n\t\tsetProcess('loading')\n\t}, [])\n\n\treturn { request, clearError, process, setProcess }\n}\n","import { useHttp } from '../hooks/http.hook'\n\nconst useMarvelService = () => {\n\tconst { request, clearError, process, setProcess } = useHttp()\n\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/'\n\tconst _apiKey = 'apikey=93f100f32a709b185b53e61657e81944'\n\tconst _baseOffset = 210\n\n\tconst getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\n\t\treturn res.data.results.map(_transformCharacter)\n\t}\n\n\tconst getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\n\t\treturn res.data.results.map(_transformCharacter)\n\t}\n\n\tconst getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\n\t\treturn _transformCharacter(res.data.results[0])\n\t}\n\n\tconst getAllComics = async (offset = 0) => {\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\n\t\treturn res.data.results.map(_transformComics)\n\t}\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\n\t\treturn _transformComics(res.data.results[0])\n\t}\n\n\tconst _transformCharacter = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description\n\t\t\t\t? `${char.description.slice(0, 210)}...`\n\t\t\t\t: 'There is no description for this character',\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items,\n\t\t}\n\t}\n\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || 'There is no description',\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || 'en-us',\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\n\t\t}\n\t}\n\n\treturn {\n\t\tclearError,\n\t\tprocess,\n\t\tsetProcess,\n\t\tgetAllCharacters,\n\t\tgetCharacter,\n\t\tgetCharacterByName,\n\t\tgetAllComics,\n\t\tgetComic,\n\t}\n}\n\nexport default useMarvelService\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","setContent","process","Component","newItemLoading","Spinner","Error","ComicsList","comicsList","setComicsList","useState","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","loading","error","getAllComics","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","items","map","item","Link","to","concat","id","thumbnail","title","price","uuidv4","renderItems","disabled","onClick","ComicsPage","_Fragment","Helmet","name","content","request","clearError","useHttp","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","status","data","json","e","_apiBase","_apiKey","_transformCharacter","char","description","slice","path","extension","homepage","urls","wiki","comics","_transformComics","_comics$textObjects$","pageCount","language","textObjects","prices","getAllCharacters","results","getCharacter","res","getCharacterByName","getComic","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","uuid","REGEX","test","byteToHex","i","push","toString","substr","toLowerCase","validate","TypeError","options","buf","rnds","random","stringify"],"sourceRoot":""}